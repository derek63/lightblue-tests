# Tests of crud service.
# Notes on json validation:
#   must supply count or expected
#   if supply expected can optionally specify operator
#   operator defaults to "eq", available values are: abs contains eq ge gt index inv invert le lt ne neg not pos truth
#   operator is applied as: <actual> <operator> <expected>
---
- config:
    - testset: "CRUD Test"
    - headers: {Content-Type: application/json}

- test: # verify entity exists
    - name: "Verify Entity: /metadata/entity/version"
    - url: "/metadata/${ENTITY_NAME}/${ENTITY_VERSION}"
    - headers: {Content-Type: application/json}
    - group: "metadata/find"
    - validators: # operator is applied as: <actual> <operator> <expected>
        - {type: "json", query: "object_type", operator: "empty", expected: ""}

- test:
    - name: "Create One Entity"
    - url: "/data/${ENTITY_NAME}/${ENTITY_VERSION}"
    - method: PUT
    - headers: {Content-Type: application/json}
    - group: "crud/insert"
    - body: {file: "test-crud-insert.json"}
    - validators: # operator is applied as: <actual> <operator> <expected>
        - {type: "json", query: "status", operator: "eq", expected: "COMPLETE"}
        - {type: "json", query: "modifiedCount", operator: "eq", expected: 1}
        - {type: "json", query: "matchCount", operator: "eq", expected: 0}
        - {type: "json", query: "processed/_id", operator: "exists", expected: ""}

- test:
    - name: "Simple Find"
    - url: "/data/find/${ENTITY_NAME}/${ENTITY_VERSION}?Q=login:bserdar"
    - method: GET
    - headers: {Content-Type: application/json}
    - group: "crud/find"
    - validators: # operator is applied as: <actual> <operator> <expected>
        - {type: "json", query: "status", operator: "eq", expected: "COMPLETE"}
        - {type: "json", query: "modifiedCount", operator: "eq", expected: 0}
        - {type: "json", query: "matchCount", operator: "eq", expected: 1}
        - {type: "json", query: "processed/_id", operator: "exists", expected: ""}
        - {type: "json", query: "processed/login", operator: "eq", expected: "bserdar"}
        - {type: "json", query: "processed/password", operator: "exists", expected: ""}
        - {type: "json", query: "processed/contactPermissions", operator: "exists", expected: ""}
        - {type: "json", query: "processed/personalInfo", operator: "exists", expected: ""}
        - {type: "json", query: "processed/sites", operator: "exists", expected: ""}
        - {type: "json", query: "processed/sites/0/streetAddress", operator: "exists", expected: ""}
        - {type: "json", query: "processed/sites/0/contactInfo", operator: "exists", expected: ""}
        - {type: "json", query: "processed/sites/0/usages", operator: "exists", expected: ""}

- test:
    - name: "Simple Find with Projection: Basic"
    - url: "/data/find/${ENTITY_NAME}/${ENTITY_VERSION}?Q=login:bserdar&P=login:1,sites:1"
    - method: GET
    - headers: {Content-Type: application/json}
    - group: "crud/find"
    - validators: # operator is applied as: <actual> <operator> <expected>
        - {type: "json", query: "status", operator: "eq", expected: "COMPLETE"}
        - {type: "json", query: "modifiedCount", operator: "eq", expected: 0}
        - {type: "json", query: "matchCount", operator: "eq", expected: 1}
        - {type: "json", query: "processed/_id", operator: "empty", expected: ""}
        - {type: "json", query: "processed/login", operator: "eq", expected: "bserdar"}
        - {type: "json", query: "processed/password", operator: "empty", expected: ""}
        - {type: "json", query: "processed/contactPermissions", operator: "empty", expected: ""}
        - {type: "json", query: "processed/personalInfo", operator: "empty", expected: ""}
        - {type: "json", query: "processed/sites", operator: "exists", expected: ""}
        - {type: "json", query: "processed/sites/0/streetAddress", operator: "exists", expected: ""}
        - {type: "json", query: "processed/sites/0/contactInfo", operator: "exists", expected: ""}
        - {type: "json", query: "processed/sites/0/usages", operator: "exists", expected: ""}

- test:
    - name: "Simple Find with Projection: All Site Elements"
    - url: "/data/find/${ENTITY_NAME}/${ENTITY_VERSION}?Q=login:bserdar&P=login:1,sites.*:1"
    - method: GET
    - headers: {Content-Type: application/json}
    - group: "crud/find"
    - validators: # operator is applied as: <actual> <operator> <expected>
        - {type: "json", query: "status", operator: "eq", expected: "COMPLETE"}
        - {type: "json", query: "modifiedCount", operator: "eq", expected: 0}
        - {type: "json", query: "matchCount", operator: "eq", expected: 1}
        - {type: "json", query: "processed/_id", operator: "empty", expected: ""}
        - {type: "json", query: "processed/login", operator: "eq", expected: "bserdar"}
        - {type: "json", query: "processed/password", operator: "empty", expected: ""}
        - {type: "json", query: "processed/contactPermissions", operator: "empty", expected: ""}
        - {type: "json", query: "processed/personalInfo", operator: "empty", expected: ""}
        - {type: "json", query: "processed/sites", operator: "exists", expected: ""}
        - {type: "json", query: "processed/sites/0/streetAddress", operator: "empty", expected: ""}
        - {type: "json", query: "processed/sites/0/contactInfo", operator: "empty", expected: ""}
        - {type: "json", query: "processed/sites/0/usages", operator: "empty", expected: ""}

