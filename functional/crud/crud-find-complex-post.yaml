# Tests of crud service.
# Notes on json validation:
#   must supply count or expected
#   if supply expected can optionally specify operator
#   operator defaults to "eq", available values are: abs contains eq ge gt index inv invert le lt ne neg not pos truth
#   operator is applied as: <actual> <operator> <expected>
---
- config:
    - testset: "CRUD Test: Find with POST"
    - headers: {Content-Type: application/json}

- test:
    - name: "Find: eq or not eq"
    - url: "/data/find/${ENTITY_NAME}/${ENTITY_VERSION}"
    - method: POST
    - headers: {Content-Type: application/json}
    - group: "crud/find/POST"
    - body: '{
        "object_type":"${ENTITY_NAME}",
        "returning": [ { "field":"login" }, { "field":"_id" } ],
        "query":  { "$or": [ { "field":"login", "op":"$eq", "rvalue":"bserdar" }, { "field":"login", "op":"$neq", "rvalue":"bserdar" } ] },
        "sort": { "login":"$asc" }
    }'
    - validators:
        - {type: "json", query: "status", operator: "eq", expected: "COMPLETE"}
        - {type: "json", query: "modifiedCount", operator: "eq", expected: 0}
        - {type: "json", query: "matchCount", operator: "eq", expected: 2}
        - {type: "json", query: "processed", operator: "exists", expected: ""}
        - {type: "json", query: "processed", operator: "count", expected: 2}
#        - {type: "json", query: "processed.0._id", operator: "exists", expected: ""}
        - {type: "json", query: "processed.0.login", operator: "eq", expected: "bserdar"}
#        - {type: "json", query: "processed.1._id", operator: "exists", expected: ""}
        - {type: "json", query: "processed.1.login", operator: "eq", expected: "nmalik"}

